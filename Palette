import tkinter as tk
from tkinter.colorchooser import askcolor

from Data import Button, ColorData, GridData, SymmetryData, FilledData
import util


class Palette:
    def __init__(self, win: tk):
        """Color section of menu"""

        self.palette = tk.LabelFrame(win, text="ColorData", labelanchor=tk.N)

        # create buttons
        for index, color in enumerate(ColorData.colors):
            btn = util.make_button(
                self.palette, color, command=lambda x=color: self.set_current_color(x)
            )
            btn.grid(row=0, column=index)

        # button for choosing non-default color
        self.non_default_color_button = util.make_button(
            self.palette,
            text="Current",
            color="black",
            fg="white",
            width=Button.width,
            command=self.choose_non_default_color,
        )
        self.non_default_color_button.grid(row=1, column=0, columnspan=4, sticky=tk.EW)

        # button for using previous color
        self.use_previous_color_button = util.make_button(
            self.palette,
            text="Previous",
            width=Button.width,
            command=self.use_previous_color,
        )
        self.use_previous_color_button.grid(row=1, column=4, columnspan=4, sticky=tk.EW)

    def set_current_color(self, color):
        """Set current and previous color choices"""

        ColorData.previous_color = ColorData.current_color
        ColorData.current_color = color

        self.use_previous_color_button["bg"] = ColorData.previous_color
        self.use_previous_color_button["fg"] = (
            "white" if ColorData.previous_color == "black" else "black"
        )

        self.non_default_color_button["bg"] = ColorData.current_color
        self.non_default_color_button["fg"] = (
            "white" if ColorData.current_color == "black" else "black"
        )

    def choose_non_default_color(self):
        """Assigns current color to selected color from popup"""

        new_current_color = askcolor(color=ColorData.current_color)[1]
        self.set_current_color(new_current_color)

    def use_previous_color(self):
        """Assigns current color to previous color"""

        self.set_current_color(ColorData.previous_color)

    def pack(self):
        self.palette.pack(side=tk.LEFT, anchor=tk.NW)
